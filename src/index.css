@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply bg-[#333333] text-white min-h-screen overflow-hidden flex items-center justify-center;
  }
}

.chat-container {
  @apply w-full max-w-3xl mx-auto flex flex-col;
  max-width: 1000px;
  height: 90vh;
  position: relative;
  background-image: url('/lovable-uploads/a3e45ca6-c6c7-4b08-91fd-313bca3c1286.png');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  border-radius: 12px;
  animation: container-glitch 11s infinite;
}

/* Glitch container and pseudo-elements */
.chat-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  pointer-events: none;
  z-index: 1;
  border-radius: 12px;
  mix-blend-mode: overlay;
}

/* Noise overlay */
.chat-container::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  opacity: 0.05;
  pointer-events: none;
  z-index: 2;
  mix-blend-mode: overlay;
  animation: noise 0.5s steps(2) infinite;
}

@keyframes container-glitch {
  0%, 93% {
    transform: none;
    filter: none;
    clip-path: none;
  }
  93.5% {
    transform: translate(2px, 0) skew(2deg);
    filter: 
      drop-shadow(2px 0 #ff00ea) 
      drop-shadow(-2px 0 #00ffff)
      hue-rotate(90deg);
    clip-path: polygon(0 15%, 100% 15%, 100% 85%, 0 85%);
  }
  94% {
    transform: translate(-2px, 0) skew(-2deg);
    filter: 
      drop-shadow(3px 0 #ff0000) 
      drop-shadow(-3px 0 #00ffff)
      saturate(150%)
      contrast(120%);
    clip-path: polygon(0 10%, 100% 10%, 100% 90%, 0 90%);
  }
  94.5% {
    transform: translate(1px, 0) skew(1deg);
    filter: 
      drop-shadow(4px 0 #7FDBFF) 
      drop-shadow(-4px 0 #ff00ea)
      hue-rotate(-90deg)
      brightness(120%);
    clip-path: polygon(0 5%, 100% 5%, 100% 95%, 0 95%);
  }
  95% {
    transform: translate(-1px, 0) skew(-1deg);
    filter: 
      drop-shadow(-3px 0 #00ffff) 
      drop-shadow(3px 0 #ff0000)
      saturate(200%)
      contrast(150%);
    clip-path: inset(5% 5% 5% 5%);
  }
  95.5% {
    transform: translate(1px, 0);
    filter: 
      drop-shadow(2px 0 #ff00ea) 
      drop-shadow(-2px 0 #7FDBFF)
      hue-rotate(45deg)
      brightness(150%);
    clip-path: inset(2% 2% 2% 2%);
  }
  96% {
    transform: none;
    filter: 
      url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='pixelate'%3E%3CfeFlood x='4' y='4' height='2' width='2'/%3E%3CfeComposite/%3E%3CfeTile/%3E%3CfeComposite/%3E%3C/filter%3E%3C/svg%3E#pixelate")
      saturate(130%)
      contrast(110%)
      brightness(110%);
    clip-path: none;
  }
}

@keyframes noise {
  0%, 100% { transform: translate(0, 0); }
  10% { transform: translate(-5%, -5%); }
  20% { transform: translate(-10%, 5%); }
  30% { transform: translate(5%, -10%); }
  40% { transform: translate(-5%, 15%); }
  50% { transform: translate(-10%, 5%); }
  60% { transform: translate(15%, 0); }
  70% { transform: translate(0, 10%); }
  80% { transform: translate(-15%, 0); }
  90% { transform: translate(10%, 5%); }
}

.message {
  @apply w-full p-4 mb-4 bg-container animate-fade-in relative z-30;
  backdrop-filter: blur(5px);
  border-radius: 8px;
  border-width: 2px;
}

.message-ai {
  @apply border-2 border-aiMessage text-aiMessage;
}

.message-user {
  @apply border-2 border-userMessage text-userMessage;
}

.message p {
  @apply font-sans text-base leading-relaxed break-words;
}

@keyframes gradient-shift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.animate-gradient-shift {
  animation: gradient-shift 15s ease infinite;
  background-size: 200% 200%;
}

/* Glitch Transition Effects */
.glitch-container {
  position: relative;
  overflow: hidden;
}

.glitch-layers {
  position: absolute;
  inset: 0;
  mix-blend-mode: overlay;
}

.glitch-layer {
  position: absolute;
  inset: 0;
  background-image: inherit;
  background-size: cover;
  background-position: center;
  animation: glitch-animation 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

.glitch-layer:nth-child(1) {
  animation-delay: 0.1s;
  left: 2px;
  filter: brightness(1.5) saturate(1.2) hue-rotate(15deg);
  mix-blend-mode: multiply;
  opacity: 0.8;
}

.glitch-layer:nth-child(2) {
  animation-delay: 0.2s;
  left: -2px;
  filter: brightness(1.3) saturate(1.5) hue-rotate(-15deg);
  mix-blend-mode: screen;
  opacity: 0.9;
}

.glitch-layer:nth-child(3) {
  animation-delay: 0.3s;
  left: 1px;
  filter: brightness(1.4) saturate(1.3) hue-rotate(5deg);
  mix-blend-mode: overlay;
  opacity: 0.7;
}

@keyframes glitch-animation {
  0% {
    transform: translate3d(0, 0, 0) scale(1);
    filter: brightness(1) contrast(1);
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
  
  20% {
    transform: translate3d(5px, 2px, 0) scale(1.02);
    filter: brightness(1.2) contrast(1.3);
    clip-path: polygon(0 15%, 100% 5%, 100% 85%, 0 95%);
  }
  
  40% {
    transform: translate3d(-3px, -1px, 0) scale(0.98);
    filter: brightness(0.9) contrast(1.4);
    clip-path: polygon(0 10%, 100% 20%, 100% 80%, 0 90%);
  }
  
  60% {
    transform: translate3d(3px, 1px, 0) scale(1.01);
    filter: brightness(1.3) contrast(0.9);
    clip-path: polygon(0 5%, 100% 15%, 100% 90%, 0 80%);
  }
  
  80% {
    transform: translate3d(-2px, -2px, 0) scale(0.99);
    filter: brightness(1.1) contrast(1.2);
    clip-path: polygon(0 20%, 100% 10%, 100% 95%, 0 85%);
  }
  
  100% {
    transform: translate3d(0, 0, 0) scale(1);
    filter: brightness(1) contrast(1);
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

/* Scanlines effect */
.glitch-container::after {
  content: '';
  position: absolute;
  inset: 0;
  background: repeating-linear-gradient(
    0deg,
    rgba(0, 0, 0, 0.1) 0px,
    rgba(0, 0, 0, 0.1) 1px,
    transparent 1px,
    transparent 2px
  );
  pointer-events: none;
  animation: scanlines 0.6s linear infinite;
}

@keyframes scanlines {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(2px);
  }
}
